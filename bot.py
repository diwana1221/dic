#8366269150:AAEoaiS6IO5trTKYUPbVH3o29RBcSww73YU
import os
import logging
import re
import json
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è Railway
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–ª–æ–≤–Ω–∏–∫ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—ó —Ç–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
PRONUNCIATION_DB = {
    # –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—ó
    'pronunciation': {
        'the': '–∑–µ', 'and': '–µ–Ω–¥', 'you': '—é', 'are': '–∞—Ä', 'your': '–π–æ—Ä',
        'their': '–∑–µ—Ä', 'there': '–∑–µ—Ä', 'they': '–∑–µ–π', 'what': '—É–æ—Ç', 
        'when': '–≤–µ–Ω', 'where': '–≤–µ—Ä', 'why': '–≤–∞–π', 'who': '—Ö—É', 
        'which': '–≤—ñ—á', 'this': '–∑–∏—Å', 'that': '–∑–µ—Ç', 'with': '–≤—ñ–∑',
        'have': '—Ö–µ–≤', 'give': '–≥—ñ–≤', 'live': '–ª—ñ–≤', 'love': '–ª–∞–≤',
        'some': '—Å–∞–º', 'come': '–∫–∞–º', 'done': '–¥–∞–Ω', 'one': '–≤–∞–Ω',
        'two': '—Ç—É', 'three': '—Å—Ä—ñ', 'four': '—Ñ–æ—Ä', 'five': '—Ñ–∞–π–≤',
        'six': '—Å—ñ–∫—Å', 'seven': '—Å–µ–≤–µ–Ω', 'eight': '–µ–π—Ç', 'nine': '–Ω–∞–π–Ω',
        'ten': '—Ç–µ–Ω', 'answer': '–µ–Ω—Å–µ—Ä', 'hello': '—Ö–µ–ª–æ—É', 'thanks': '—Å–µ–Ω–∫—Å',
        'computer': '–∫–æ–º–ø\'—é—Ç–µ—Ä', 'water': '–≤–æ—Ç–µ—Ä', 'people': '–ø—ñ–ø–ª',
        'because': '–±—ñ–∫–æ–∑', 'family': '—Ñ–µ–º—ñ–ª—ñ', 'friend': '—Ñ—Ä–µ–Ω–¥',
        'school': '—Å–∫—É–ª', 'house': '—Ö–∞—É—Å', 'car': '–∫–∞—Ä', 'book': '–±—É–∫',
        'phone': '—Ñ–æ–Ω', 'time': '—Ç–∞–π–º', 'day': '–¥–µ–π', 'night': '–Ω–∞–π—Ç',
        'sun': '—Å–∞–Ω', 'moon': '–º—É–Ω', 'star': '—Å—Ç–∞—Ä', 'tree': '—Ç—Ä—ñ',
        'flower': '—Ñ–ª–∞–≤–µ—Ä', 'food': '—Ñ—É–¥', 'good': '–≥—É–¥', 'bad': '–±–µ–¥',
        'happy': '—Ö–µ–ø—ñ', 'sad': '—Å–µ–¥', 'big': '–±—ñ–≥', 'small': '—Å–º–æ–ª',
        'hot': '—Ö–æ—Ç', 'cold': '–∫–æ–ª–¥', 'new': '–Ω—é', 'old': '–æ–ª–¥',
        'beautiful': '–±\'—é—Ç—ñ—Ñ—É–ª', 'ugly': '–∞–≥–ª—ñ', 'fast': '—Ñ–µ—Å—Ç',
        'slow': '—Å–ª–æ—É', 'high': '—Ö–∞–π', 'low': '–ª–æ—É', 'right': '—Ä–∞–π—Ç',
        'left': 'left', 'up': '–∞–ø', 'down': '–¥–∞—É–Ω', 'yes': '–µ—Å',
        'no': '–Ω–æ—É', 'please': '–ø–ª—ñ–∑', 'sorry': '—Å–æ—Ä—ñ', 'thank you': '—Å–µ–Ω–∫ —é',
        'goodbye': '–≥—É–¥–±–∞–π', 'morning': '–º–æ—Ä–Ω—ñ–Ω–≥', 'evening': '—ñ–≤–Ω—ñ–Ω–≥',
        'apple': '–µ–ø–ø–ª', 'banana': '–±–∞–Ω–∞–Ω–∞', 'orange': '–æ—Ä–µ–Ω–¥–∂',
        'mother': '–º–∞–∑–µ—Ä', 'father': '—Ñ–∞–∑–µ—Ä', 'brother': '–±—Ä–∞–∑–µ—Ä',
        'sister': '—Å—ñ—Å—Ç–µ—Ä', 'child': '—á–∞–π–ª–¥', 'man': '–º–µ–Ω', 'woman': '–≤—É–º–µ–Ω'
    },
    
    # –ü–µ—Ä–µ–∫–ª–∞–¥–∏
    'translation': {
        'the': 'the (–∞—Ä—Ç–∏–∫–ª—å)', 'and': '—ñ', 'you': '—Ç–∏/–≤–∏', 'are': '—î', 
        'your': '—Ç–≤—ñ–π/–≤–∞—à', 'their': '—ó—Ö–Ω—ñ–π', 'there': '—Ç–∞–º', 'they': '–≤–æ–Ω–∏',
        'what': '—â–æ', 'when': '–∫–æ–ª–∏', 'where': '–¥–µ', 'why': '—á–æ–º—É', 
        'who': '—Ö—Ç–æ', 'which': '—è–∫–∏–π', 'this': '—Ü–µ–π', 'that': '—Ç–æ–π',
        'with': '–∑', 'have': '–º–∞—Ç–∏', 'give': '–¥–∞–≤–∞—Ç–∏', 'live': '–∂–∏—Ç–∏',
        'love': '–∫–æ—Ö–∞—Ç–∏', 'some': '–¥–µ—è–∫—ñ', 'come': '–ø—Ä–∏—Ö–æ–¥–∏—Ç–∏',
        'done': '–∑—Ä–æ–±–ª–µ–Ω–æ', 'one': '–æ–¥–∏–Ω', 'two': '–¥–≤–∞', 'three': '—Ç—Ä–∏',
        'four': '—á–æ—Ç–∏—Ä–∏', 'five': '–ø\'—è—Ç—å', 'six': '—à—ñ—Å—Ç—å', 'seven': '—Å—ñ–º',
        'eight': '–≤—ñ—Å—ñ–º', 'nine': '–¥–µ–≤\'—è—Ç—å', 'ten': '–¥–µ—Å—è—Ç—å',
        'answer': '–≤—ñ–¥–ø–æ–≤—ñ–¥—å', 'hello': '–ø—Ä–∏–≤—ñ—Ç', 'thanks': '–¥—è–∫—É—é',
        'computer': '–∫–æ–º–ø\'—é—Ç–µ—Ä', 'water': '–≤–æ–¥–∞', 'people': '–ª—é–¥–∏',
        'because': '—Ç–æ–º—É —â–æ', 'family': '—Ä–æ–¥–∏–Ω–∞', 'friend': '–¥—Ä—É–≥',
        'school': '—à–∫–æ–ª–∞', 'house': '–±—É–¥–∏–Ω–æ–∫', 'car': '–∞–≤—Ç–æ–º–æ–±—ñ–ª—å',
        'book': '–∫–Ω–∏–≥–∞', 'phone': '—Ç–µ–ª–µ—Ñ–æ–Ω', 'time': '—á–∞—Å', 'day': '–¥–µ–Ω—å',
        'night': '–Ω—ñ—á', 'sun': '—Å–æ–Ω—Ü–µ', 'moon': '–º—ñ—Å—è—Ü—å', 'star': '–∑—ñ—Ä–∫–∞',
        'tree': '–¥–µ—Ä–µ–≤–æ', 'flower': '–∫–≤—ñ—Ç–∫–∞', 'food': '—ó–∂–∞', 'good': '–¥–æ–±—Ä–µ',
        'bad': '–ø–æ–≥–∞–Ω–æ', 'happy': '—â–∞—Å–ª–∏–≤–∏–π', 'sad': '—Å—É–º–Ω–∏–π', 'big': '–≤–µ–ª–∏–∫–∏–π',
        'small': '–º–∞–ª–∏–π', 'hot': '–≥–∞—Ä—è—á–∏–π', 'cold': '—Ö–æ–ª–æ–¥–Ω–∏–π', 'new': '–Ω–æ–≤–∏–π',
        'old': '—Å—Ç–∞—Ä–∏–π', 'beautiful': '–∫—Ä–∞—Å–∏–≤–∏–π', 'ugly': '–ø–æ—Ç–≤–æ—Ä–Ω–∏–π',
        'fast': '—à–≤–∏–¥–∫–∏–π', 'slow': '–ø–æ–≤—ñ–ª—å–Ω–∏–π', 'high': '–≤–∏—Å–æ–∫–∏–π',
        'low': '–Ω–∏–∑—å–∫–∏–π', 'right': '–ø—Ä–∞–≤–∏–π/–ø—Ä–∞–≤–æ', 'left': '–ª—ñ–≤–∏–π/–ª—ñ–≤–æ—Ä—É—á',
        'up': '–≤–≥–æ—Ä—É', 'down': '–≤–Ω–∏–∑', 'yes': '—Ç–∞–∫', 'no': '–Ω—ñ',
        'please': '–±—É–¥—å –ª–∞—Å–∫–∞', 'sorry': '–≤–∏–±–∞—á', 'thank you': '–¥—è–∫—É—é',
        'goodbye': '–¥–æ –ø–æ–±–∞—á–µ–Ω–Ω—è', 'morning': '—Ä–∞–Ω–æ–∫', 'evening': '–≤–µ—á—ñ—Ä',
        'apple': '—è–±–ª—É–∫–æ', 'banana': '–±–∞–Ω–∞–Ω', 'orange': '–∞–ø–µ–ª—å—Å–∏–Ω',
        'mother': '–º–∞—Ç–∏', 'father': '–±–∞—Ç—å–∫–æ', 'brother': '–±—Ä–∞—Ç',
        'sister': '—Å–µ—Å—Ç—Ä–∞', 'child': '–¥–∏—Ç–∏–Ω–∞', 'man': '—á–æ–ª–æ–≤—ñ–∫', 'woman': '–∂—ñ–Ω–∫–∞'
    }
}

def get_pronunciation(word):
    """–û—Ç—Ä–∏–º—É—î —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—é —Å–ª–æ–≤–∞"""
    word_lower = word.lower()
    
    # –°–ø–æ—á–∞—Ç–∫—É —à—É–∫–∞—î–º–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    if word_lower in PRONUNCIATION_DB['pronunciation']:
        return PRONUNCIATION_DB['pronunciation'][word_lower], "–±–∞–∑–∞ –¥–∞–Ω–∏—Ö"
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—è –¥–ª—è –Ω–æ–≤–∏—Ö —Å–ª—ñ–≤
    return auto_pronunciation(word_lower), "–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—è"

def get_translation(word):
    """–û—Ç—Ä–∏–º—É—î –ø–µ—Ä–µ–∫–ª–∞–¥ —Å–ª–æ–≤–∞"""
    word_lower = word.lower()
    return PRONUNCIATION_DB['translation'].get(word_lower, "–ø–µ—Ä–µ–∫–ª–∞–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

def auto_pronunciation(word):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø—Ä–∞–≤–∏–ª"""
    # –û—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–∞–≤–∏–ª–∞ –≤–∏–º–æ–≤–∏
    rules = [
        (r'th', '—Å'), (r'ch', '—á'), (r'sh', '—à'), (r'ph', '—Ñ'), (r'wh', '–≤'),
        (r'ck', '–∫'), (r'ng', '–Ω–≥'), (r'qu', '–∫–≤'), (r'kn', '–Ω'), (r'wr', '—Ä'),
        (r'gh', '–≥'), (r'rh', '—Ä'), (r'psy', '—Å–∞–π'), (r'pn', '–Ω'), (r'ps', '—Å')
    ]
    
    # –ì–æ–ª–æ—Å–Ω—ñ —Ç–∞ —ó—Ö –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó
    vowels = [
        (r'augh', '–æ—Ñ'), (r'ough', '–æ—Ñ'), (r'eigh', '–µ–π'), (r'igh', '–∞–π'),
        (r'augh', '–∞—Ñ'), (r'oi', '–æ–π'), (r'oy', '–æ–π'), (r'ou', '–∞—É'),
        (r'ow', '–∞—É'), (r'ea', '—ñ'), (r'ee', '—ñ'), (r'oo', '—É'), (r'oa', '–æ—É'),
        (r'ai', '–µ–π'), (r'ay', '–µ–π'), (r'ei', '–µ–π'), (r'ey', '–µ–π'),
        (r'ie', '—ñ'), (r'ue', '—É'), (r'ui', '—É'), (r'ae', '–µ'), (r'oe', '—ñ')
    ]
    
    # –ö—ñ–Ω—Ü–µ–≤—ñ –ø—Ä–∞–≤–∏–ª–∞
    endings = [
        (r'tion$', '—à–µ–Ω'), (r'sion$', '–∂–µ–Ω'), (r'cian$', '—à–µ–Ω'),
        (r'cious$', '—à–µ—Å'), (r'tious$', '—à–µ—Å'), (r'cial$', '—à–µ–ª'),
        (r'tial$', '—à–µ–ª'), (r'able$', '–µ–π–±–ª'), (r'ible$', '—ñ–±–ª'),
        (r'ful$', '—Ñ—É–ª'), (r'less$', '–ª–µ—Å'), (r'ness$', '–Ω–µ—Å'),
        (r'ment$', '–º–µ–Ω—Ç'), (r'ing$', '—ñ–Ω–≥'), (r'ed$', '–µ–¥'),
        (r'er$', '–µ—Ä'), (r'est$', '–µ—Å—Ç'), (r'ly$', '–ª—ñ')
    ]
    
    result = word.lower()
    
    # –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª–∞ —É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
    for pattern, replacement in endings + vowels + rules:
        result = re.sub(pattern, replacement, result)
    
    # –ë–∞–∑–æ–≤—ñ –≥–æ–ª–æ—Å–Ω—ñ
    result = re.sub(r'a', '–µ', result)
    result = re.sub(r'e', '—ñ', result) 
    result = re.sub(r'i', '–∞–π', result)
    result = re.sub(r'o', '–æ', result)
    result = re.sub(r'u', '—É', result)
    result = re.sub(r'y', '—ñ', result)
    
    # –ü—Ä–∏–≥–æ–ª–æ—Å–Ω—ñ
    result = re.sub(r'b', '–±', result)
    result = re.sub(r'c', '–∫', result)
    result = re.sub(r'd', '–¥', result)
    result = re.sub(r'f', '—Ñ', result)
    result = re.sub(r'g', '–≥', result)
    result = re.sub(r'h', '—Ö', result)
    result = re.sub(r'j', '–¥–∂', result)
    result = re.sub(r'k', '–∫', result)
    result = re.sub(r'l', '–ª', result)
    result = re.sub(r'm', '–º', result)
    result = re.sub(r'n', '–Ω', result)
    result = re.sub(r'p', '–ø', result)
    result = re.sub(r'q', '–∫', result)
    result = re.sub(r'r', '—Ä', result)
    result = re.sub(r's', '—Å', result)
    result = re.sub(r't', '—Ç', result)
    result = re.sub(r'v', '–≤', result)
    result = re.sub(r'w', '–≤', result)
    result = re.sub(r'x', '–∫—Å', result)
    result = re.sub(r'z', '–∑', result)
    
    return result

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    welcome_text = f"""
üëã –ü—Ä–∏–≤—ñ—Ç, {user.first_name}!

ü§ñ –Ø –±–æ—Ç –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –≤–∏–º–æ–≤–∏!

üéØ –ù–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ –∞–Ω–≥–ª—ñ–π—Å—å–∫–µ —Å–ª–æ–≤–æ —ñ —è:
‚Ä¢ üîä –ü–æ–∫–∞–∂—É **—Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—é** —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏
‚Ä¢ üåê –ù–∞–¥–∞–º **–ø–µ—Ä–µ–∫–ª–∞–¥** —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
‚Ä¢ üìö –í–∏–∫–æ—Ä–∏—Å—Ç–∞—é –±–∞–∑—É –∑ 100+ —Å–ª—ñ–≤

üîä **–ü—Ä–∏–∫–ª–∞–¥–∏:**
‚Ä¢ `hello` ‚Üí `—Ö–µ–ª–æ—É` (–ø—Ä–∏–≤—ñ—Ç)
‚Ä¢ `computer` ‚Üí `–∫–æ–º–ø'—é—Ç–µ—Ä` (–∫–æ–º–ø'—é—Ç–µ—Ä)
‚Ä¢ `thanks` ‚Üí `—Å–µ–Ω–∫—Å` (–¥—è–∫—É—é)

üí° **–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:**
/start - –ø–æ—á–∞—Ç–æ–∫ —Ä–æ–±–æ—Ç–∏
/help - –¥–æ–ø–æ–º–æ–≥–∞
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

–ù–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ —ñ —Å–ø—Ä–æ–±—É–π! üéØ
    """
    await update.message.reply_text(welcome_text)

# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = """
üìñ **–î–æ–≤—ñ–¥–∫–∞ –ø–æ –±–æ—Ç—É:**

üéØ **–©–æ —è –≤–º—ñ—é:**
‚Ä¢ –¢—Ä–∞–Ω—Å–∫—Ä–∏–±—É–≤–∞—Ç–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ —Å–ª–æ–≤–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏
‚Ä¢ –ù–∞–¥–∞–≤–∞—Ç–∏ –ø–µ—Ä–µ–∫–ª–∞–¥ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
‚Ä¢ –ü—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –±–∞–∑–æ—é –∑ 100+ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö —Å–ª—ñ–≤
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ —Å–ª–æ–≤–∞

üîä **–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î:**
1. –Ø –ø–µ—Ä–µ–≤—ñ—Ä—è—é —Å–ª–æ–≤–æ –≤ –º–æ—ó–π –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
2. –Ø–∫—â–æ —Å–ª–æ–≤–∞ –Ω–µ–º–∞—î - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞
3. –ü–æ–≤–µ—Ä—Ç–∞—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—é —Ç–∞ –ø–µ—Ä–µ–∫–ª–∞–¥

‚ö†Ô∏è **–û–±–º–µ–∂–µ–Ω–Ω—è:**
‚Ä¢ –ü—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –∑ –æ–∫—Ä–µ–º–∏–º–∏ —Å–ª–æ–≤–∞–º–∏
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—è –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ—Ç–æ—á–Ω–æ—é –¥–ª—è —Å–∫–ª–∞–¥–Ω–∏—Ö —Å–ª—ñ–≤

üí° **–ü–æ—Ä–∞–¥–∞:** –ü–æ—á–Ω—ñ—Ç—å –∑ –ø—Ä–æ—Å—Ç–∏—Ö —Å–ª—ñ–≤ —è–∫ `hello`, `cat`, `book`
    """
    await update.message.reply_text(help_text)

# –ö–æ–º–∞–Ω–¥–∞ /stats
async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    total_words = len(PRONUNCIATION_DB['pronunciation'])
    stats_text = f"""
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:**

‚Ä¢ –°–ª—ñ–≤ —É –±–∞–∑—ñ: **{total_words}**
‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó: –ø–æ–±—É—Ç–æ–≤—ñ —Å–ª–æ–≤–∞, —á–∏—Å–ª–∞, —Ä–æ–¥–∏–Ω–∞, —ó–∂–∞
‚Ä¢ –ú–µ—Ç–æ–¥–∏: –±–∞–∑–∞ –¥–∞–Ω–∏—Ö + –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—è

üîß **–¢–µ—Ö–Ω—ñ—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:**
‚Ä¢ –•–æ—Å—Ç–∏–Ω–≥: Railway
‚Ä¢ –ú–æ–≤–∞: Python
‚Ä¢ –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞: python-telegram-bot

–ë–∞–∑–∞ –ø–æ—Å—Ç—ñ–π–Ω–æ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è! üöÄ
    """
    await update.message.reply_text(stats_text)

# –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text.strip()
    
    # –Ü–≥–Ω–æ—Ä—É—î–º–æ –∫–æ–º–∞–Ω–¥–∏
    if user_message.startswith('/'):
        return
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –æ–¥–Ω–µ —Å–ª–æ–≤–æ
    if ' ' in user_message:
        await update.message.reply_text("‚ö†Ô∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ç—ñ–ª—å–∫–∏ **–æ–¥–Ω–µ** —Å–ª–æ–≤–æ")
        return
    
    if not user_message.isalpha():
        await update.message.reply_text("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ç—ñ–ª—å–∫–∏ –ª—ñ—Ç–µ—Ä–∏ (–±–µ–∑ —Ü–∏—Ñ—Ä —á–∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ñ–≤)")
        return
    
    if len(user_message) > 20:
        await update.message.reply_text("‚ö†Ô∏è –°–ª–æ–≤–æ –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–µ. –ú–∞–∫—Å–∏–º—É–º 20 —Å–∏–º–≤–æ–ª—ñ–≤")
        return
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—é —Ç–∞ –ø–µ—Ä–µ–∫–ª–∞–¥
    pronunciation, method = get_pronunciation(user_message)
    translation = get_translation(user_message)
    
    # –§–æ—Ä–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    response = f"""
üî§ **–°–ª–æ–≤–æ:** `{user_message}`
üîä **–í–∏–º–æ–≤–∞:** `{pronunciation}`
üåê **–ü–µ—Ä–µ–∫–ª–∞–¥:** `{translation}`
üìù **–ú–µ—Ç–æ–¥:** {method}

üí° *–ü—Ä–∞—Ü—é—î –Ω–∞ Railway 24/7!*
    """
    
    await update.message.reply_text(response)

# –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.error(f"–ü–æ–º–∏–ª–∫–∞: {context.error}")
    await update.message.reply_text("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.")

def main():
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    TOKEN = os.environ.get('BOT_TOKEN')
    
    if not TOKEN:
        logger.error("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –î–æ–¥–∞–π—Ç–µ –π–æ–≥–æ —É –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –Ω–∞ Railway")
        return
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫
    application = Application.builder().token(TOKEN).build()
    
    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("stats", stats_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞ Railway...")
    logger.info(f"üìä –ë–∞–∑–∞ –º—ñ—Å—Ç–∏—Ç—å {len(PRONUNCIATION_DB['pronunciation'])} —Å–ª—ñ–≤")
    application.run_polling()

if __name__ == "__main__":
    main()
