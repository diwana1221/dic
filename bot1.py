#8366269150:AAEoaiS6IO5trTKYUPbVH3o29RBcSww73YU
import os
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–ª–æ–≤–Ω–∏–∫ –≤–∏–º–æ–≤–∏
SOUND_MAP = {
    'a': '–µ', 'e': '—ñ', 'i': '–∞–π', 'o': '–æ—É', 'u': '—é', 'y': '–∞–π',
    'b': '–±', 'c': '–∫', 'd': '–¥', 'f': '—Ñ', 'g': '–≥', 'h': '—Ö',
    'j': '–¥–∂', 'k': '–∫', 'l': '–ª', 'm': '–º', 'n': '–Ω', 'p': '–ø',
    'q': '–∫', 'r': '—Ä', 's': '—Å', 't': '—Ç', 'v': '–≤', 'w': '–≤',
    'x': '–∫—Å', 'z': '–∑', 'ch': '—á', 'sh': '—à', 'th': '—Å', 'ph': '—Ñ',
    'ck': '–∫', 'ng': '–Ω–≥', 'wh': '–≤', 'qu': '–∫–≤'
}

def make_sound(word):
    word = word.lower()
    result = []
    i = 0
    
    while i < len(word):
        if i + 1 < len(word) and word[i:i+2] in SOUND_MAP:
            result.append(SOUND_MAP[word[i:i+2]])
            i += 2
        elif word[i] in SOUND_MAP:
            result.append(SOUND_MAP[word[i]])
            i += 1
        else:
            result.append(word[i])
            i += 1
    
    return ''.join(result)

# –ö–æ–º–∞–Ω–¥–∏
async def start(update, context):
    text = """
üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç-–ø–µ—Ä–µ–∫–ª–∞–¥–∞—á –≤–∏–º–æ–≤–∏!

üìù –ù–∞–ø–∏—à–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫–µ —Å–ª–æ–≤–æ, –∞ —è –ø–æ–∫–∞–∂—É —è–∫ –π–æ–≥–æ –≤–∏–º–æ–≤–ª—è—Ç–∏.

–ü—Ä–∏–∫–ª–∞–¥–∏:
‚Ä¢ hello ‚Üí —Ö–µ–ª–æ—É
‚Ä¢ cat ‚Üí –∫–µ—Ç
‚Ä¢ thanks ‚Üí —Å–µ–Ω–∫—Å

–°–ø—Ä–æ–±—É–π! –ù–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ üéØ
    """
    await update.message.reply_text(text)

async def handle_word(update, context):
    word = update.message.text.strip().lower()
    
    if ' ' in word:
        await update.message.reply_text("‚ö†Ô∏è –ù–∞–ø–∏—à–∏ —Ç—ñ–ª—å–∫–∏ –æ–¥–Ω–µ —Å–ª–æ–≤–æ!")
        return
    
    if not word.isalpha():
        await update.message.reply_text("‚ö†Ô∏è –¢—ñ–ª—å–∫–∏ –±—É–∫–≤–∏!")
        return
    
    sound = make_sound(word)
    
    response = f"""
üî§ –°–ª–æ–≤–æ: {word}
üîä –í–∏–º–æ–≤–∞: {sound}

üí° –ß–∏—Ç–∞–π —Ç–∞–∫, —è–∫ –Ω–∞–ø–∏—Å–∞–Ω–æ!
    """
    
    await update.message.reply_text(response)

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
def main():
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ Railway
    TOKEN = os.environ.get('BOT_TOKEN')
    
    if not TOKEN:
        logger.error("‚ùå –ù–µ –∑–Ω–∞–π—à–æ–≤ —Ç–æ–∫–µ–Ω! –ü–µ—Ä–µ–≤—ñ—Ä –∑–º—ñ–Ω–Ω—ñ Railway")
        return
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –±–æ—Ç–∞
    app = Application.builder().token(TOKEN).build()
    
    # –î–æ–¥–∞—î–º–æ –∫–æ–º–∞–Ω–¥–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT, handle_word))
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ
    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞ Railway...")
    app.run_polling()

if __name__ == "__main__":
    main()
